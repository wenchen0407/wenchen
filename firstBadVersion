/* The isBadVersion API is defined in the parent class VersionControl.
      boolean isBadVersion(int version); */

public class Solution extends VersionControl {
    
    /******* Recursive method *****************/
    public int firstBadVersion(int n) {
        return findFirstBad(1, n);
    }
    
    public int findFirstBad(int low, int high){
        
      int mid = low+(high-low)/2;
      
      if(isBadVersion(mid) && !isBadVersion(mid-1)) return mid;
      
      if(isBadVersion(mid)) return findFirstBad(low, mid-1);
      else return findFirstBad(mid+1, high);
        
    }
    
    /************ iterative method ************/
    
    iterative method
    int low=1;
    int high=n;
    while(low<=high){
        int mid = low+(high-low)/2;
        boolean isBad = isBadVersion(mid);

        if(!isBad){
            low=mid+1;
        }else if(mid == 1 && isBad){
            return mid;
        }else if(mid>1 && isBad && !isBadVersion(mid-1)){
            return mid;
        }else if(mid>1 && isBad && isBadVersion(mid-1)){
            high=mid-1;
        }

    }
    
    return -1;
        
        
}
