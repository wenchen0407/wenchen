public class Solution {
    /*public int longestConsecutive(int[] nums) {
        // O(nlgn) solution
        Arrays.sort(nums);
        int res=0;
        int len=1;
        for(int i=1; i<nums.length; i++){
            if(nums[i]-nums[i-1] == 1){
                len++;
            }else if(nums[i] == nums[i-1]){
                // do nothing
            }else{
                res = Math.max(res, len);
                len=1;
            }
        }
        res = Math.max(res, len);
        return res;
    }*/
    
    public int longestConsecutive(int[] nums) {
        Set<Integer> set = new HashSet<Integer>();
        
        for(int num: nums){
            set.add(num);
        }
        int res=0;
        for(int i=0; i<nums.length; i++){
            if(!set.contains(nums[i]-1)){
                
                int val = nums[i]+1;
                int len=1;
                while(set.contains(val)){
                    val++;
                    len++;
                }
                
                res = Math.max(res, len);
            }
        }
        
        return res;
    }
}
