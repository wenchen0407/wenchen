class TrieNode{
    TrieNode[] children;
    boolean isWord;
    
    public TrieNode(){
        children = new TrieNode[26];
        isWord=false;
    }
    
}

public class WordDictionary {
    private TrieNode root;
    
    public WordDictionary(){
        root= new TrieNode();
    }
    
    public void addWord(String word){
        TrieNode head = root;
        for(char c: word.toCharArray()){
            if(head.children[c-'a']==null){
                head.children[c-'a'] = new TrieNode();
            }
            head = head.children[c-'a'];
        }
        head.isWord = true;
    }
    
    
    public boolean search(String word){
        TrieNode head = root;
        return helper(word, 0, head);   
    }
    
    public boolean helper(String word, int index, TrieNode head){
        if(index==word.length()){
            if(head.isWord) return true;
            else return false;
        }
        char c = word.charAt(index);
        
        if(c=='.'){
            for(int i=0; i<26; i++){
                if(head.children[i]!=null){
                    boolean res = helper(word, index+1, head.children[i]);
                    if(res) return true;
                }
            }
            return false;
        }else{
            if(head.children[c-'a']==null) return false;
            else return helper(word, index+1, head.children[c-'a']);
        }
    }
}

// Your WordDictionary object will be instantiated and called as such:
// WordDictionary wordDictionary = new WordDictionary();
// wordDictionary.addWord("word");
// wordDictionary.search("pattern");
