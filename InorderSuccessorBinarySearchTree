/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode inorderSuccessor(TreeNode root, TreeNode p) {
        // Binary search tree solution
        
        TreeNode succ=null;
        
        while(root!=null){
            if(p.val<root.val){
                succ = root;
                root=root.left;
            }else{
                root=root.right;
            }
        }
        return succ;
        
        
        // Naive solution: inorder iterative traversal for binary tree
        /*Stack<TreeNode> stack = new Stack<TreeNode>();
        
        if(root==null) return null;
        
        TreeNode curr = null;
        TreeNode pre = null;
        TreeNode next = root;
        
        while(!stack.empty() || next!=null){
            
            if(next!=null){
                stack.push(next);
                next=next.left;
            }else{
                curr = stack.pop();
                if(pre == p) return curr;
                pre = curr;
                next = curr.right;
            }
                
        }
        return null;*/
            
    }
    
}
