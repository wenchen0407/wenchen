public class Solution {
    
    // O(nlgn) solution, sorting the array first
    /*public int hIndex(int[] citations) {
        Arrays.sort(citations);
        int hindex=0;
        for(int i=citations.length-1; i>=0; i--){
            if(citations[i] >= citations.length-i){
                hindex++;
            }else{
                break;
            }
        }
        
        return hindex;
    }*/
    
    // O(n) solution with bucket sort
    public int hIndex(int[] citations) {
        
        int n = citations.length;
        // array of number of papers with certain citations
        // bucket[i] means the number of papers whose citations are all i
        int[] bucket = new int[n+1]; 
        for(int c: citations){
            if(c>=n){
                bucket[n]++;
            }else{
                bucket[c]++;
            }
        }
        int count = 0;
        // i means the number of citations
        for(int i=n; i>=0; i--){
            count += bucket[i];
            if(count >= i){
                return i;        
            }
        }
        return 0;
    }
}
