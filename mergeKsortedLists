/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        
      if(lists==null || lists.length==0){
        return null;  
      }
      
      PriorityQueue<ListNode> heap = new PriorityQueue<ListNode>(lists.length, new Comparator<ListNode>(){
          public int compare(ListNode l1, ListNode l2){
            return l1.val-l2.val;
          }
      }); 
      
      for(ListNode node: lists) {
        if(node!=null)
          heap.offer(node);
      }
      
      ListNode dummy = new ListNode(0);
      ListNode tail = dummy;
      
      while(heap.size()!=0){
          ListNode node = heap.poll();
          tail.next=node;
          tail=tail.next;
          if(tail.next!=null)
            heap.offer(tail.next);
      }
      
      return dummy.next;
    }
}
