public class Solution {
    public int longestPalindrome(String s) {
        // hashmap solution
        Map<Character, Integer> map = new HashMap<Character, Integer>();
        for(int i=0; i<s.length(); i++){
            char c = s.charAt(i);
            if(map.containsKey(c)) map.put(c, map.get(c)+1);
            else map.put(c, 1);
        }
        
        int res=0;
        boolean hasOdd=false;
        for(char c: map.keySet()){
            int curr=map.get(c);
            if(curr%2==0) res+=curr;
            else{ res+=curr-1; hasOdd=true;}
        }
        
        if(hasOdd) res += 1;
        return res;
        
        
        
        
        // hashset solution
        /*Set<Character> set = new HashSet<Character>();
        int count=0;
        for(int i=0; i<s.length(); i++){
            if(set.contains(s.charAt(i))){
                count+=2;
                set.remove(s.charAt(i));
            }
            else set.add(s.charAt(i));
        }
        
        if(!set.isEmpty()) count+=1;
        
        return count;*/
        
        
        
        
        
        
    }
}
